#!/bin/bash
# ___________________________________________________________________
#
# Oracle Linux 	  :	8.3 
# UEK Kernel	  :	5.4.17-2036.103.3.1.el8uek
# RHCK Kernel	  : 4.18.0-240.15.1.el8_3
# Base on Author  : Yaser Mansour Generated: 2021-01-20
#                   Snort 3 on Oracle Linux 8
# ___________________________________________________________________
# IP Reputation lists directory   /usr/local/snort/intel
# Snort install prefix            /usr/local/snort
# Rules directory                 /usr/local/snort/rules
# AppID directory                 /usr/local/snort/appid
# Logging directory               /var/log/snort
# Snort Extra Plugins directory   /usr/local/snort/extra
# PulledPork install prefix       /usr/local/pulledpork
# ___________________________________________________________________
# 
#
# ___________________________________________________________________
#  
#			1. Installing Zeroties
# ___________________________________________________________________
#clear
#curl -s https://install.zerotier.com | sudo bash
# zerotier-cli join <Network ID>
# 3efa5cb78a241e40
# ___________________________________________________________________
# 
#			2. Preparation
# ___________________________________________________________________
clear
mkdir /var/log/snort
dnf config-manager --set-enabled ol8_codeready_builder
dnf install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm -y
dnf config-manager --set-enabled epel
dnf upgrade -y
cd $HOME
mkdir sources && cd sources
git clone https://github.com/anhvv2019/config_snort3.git
echo '___________________________________________________________________'
echo '                                                                   '
echo 'Creating /etc/ld.so.conf.d/local.conf file.'
echo '___________________________________________________________________'
echo /usr/local/lib >> /etc/ld.so.conf.d/local.conf
echo /usr/local/lib64 >> /etc/ld.so.conf.d/local.conf
ldconfig
echo '___________________________________________________________________'
echo '                                                                   '
echo 'Installing components'
echo '___________________________________________________________________'
dnf install flex bison gcc gcc-c++ make cmake automake autoconf libtool libpcap-devel pcre-devel libdnet-devel hwloc-devel openssl-devel zlib-devel luajit-devel pkgconf libmnl-devel -y
dnf install libunwind-devel libnfnetlink-devel libnetfilter_queue-devel w3m xz-devel libuuid-devel hyperscan hyperscan-devel libsafec libsafec-devel gperftools-devel -y
dnf install perl-LWP-UserAgent-Determined perl-Net-SSLeay perl-LWP-Protocol-https perl-Sys-Syslog perl-Archive-Tar -y
rpm -ivh /config_snort3/libcmocka-devel-1.1.5-1.el8.x86_64.rpm
echo '___________________________________________________________________'
echo '                                                                   '
echo 'Installing LibDAQ'
echo '___________________________________________________________________'
cd $HOME
cd sources
git clone https://github.com/snort3/libdaq.git
cd libdaq/
./bootstrap
./configure
make && make install
ldconfig
cd $HOME
cd sources
echo '___________________________________________________________________'
echo '                                                                   '
echo 'Installing Flatbuffers'
echo '___________________________________________________________________'
curl -Lo flatbuffers-1.12.tar.gz https://github.com/google/flatbuffers/archive/v1.12.0.tar.gz
tar xf flatbuffers-1.12.tar.gz
mkdir fb-build && cd fb-build
cmake ../flatbuffers-1.12.0
make -j$(nproc)
make -j$(nproc) install
ldconfig
cd ../
echo '___________________________________________________________________'
echo '                                                                   '
echo 'Installing Safec'
echo '___________________________________________________________________'  
ln -s /usr/lib64/pkgconfig/safec-3.3.pc /usr/lib64/pkgconfig/libsafec.pc
echo '___________________________________________________________________'
echo '                                                                   '
echo 'Installing Snort'
echo '___________________________________________________________________' 
cd $HOME
cd sources
git clone https://github.com/snort3/snort3.git
cd snort3
export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH
export PKG_CONFIG_PATH=/usr/local/lib64/pkgconfig:$PKG_CONFIG_PATH
export CFLAGS="-O3"
export CXXFLAGS="-O3 -fno-rtti"
./configure_cmake.sh --prefix=/usr/local/snort --enable-tcmalloc
cd build/
make -j$(nproc)
make -j$(nproc) install
cd ../../
/usr/local/snort/bin/snort -V
sleep 5s
echo '___________________________________________________________________'
echo '                                                                   '
echo 'Installing Snort Extra'
echo '___________________________________________________________________' 
cd $HOME
cd sources
git clone https://github.com/snort3/snort3_extra.git
cd snort3_extra
export PKG_CONFIG_PATH=/usr/local/snort/lib64/pkgconfig:$PKG_CONFIG_PATH
./configure_cmake.sh --prefix=/usr/local/snort/extra
cd build/
make -j$(nproc)
make -j$(nproc) install
cd ../../
echo '___________________________________________________________________'
echo '                                                                   '
echo 'Configuring Snort'
echo '___________________________________________________________________'  
groupadd snort
useradd snort -r -M -g snort -s /sbin/nologin -c SNORT_SERVICE_ACCOUNT
chmod -R 5700 /var/log/snort
chown -R snort:snort /var/log/snort
chcon --reference /var/log /var/log/snort
echo '___________________________________________________________________'
echo '                                                                   '
echo 'Update rules'
echo '___________________________________________________________________'  
cd $HOME
cd sources
mkdir -p /usr/local/snort/{builtin_rules,rules,appid,intel}
curl -Lo snortrules-snapshot-3100.tar.gz https://www.snort.org/rules/snortrules-snapshot-3100.tar.gz?oinkcode=c76801b89419d6c42aa5e2eb770d6ed9d18bfa30
tar xf snortrules-snapshot-3100.tar.gz
\cp rules/*.rules /usr/local/snort/rules/
\cp builtins/builtins.rules /usr/local/snort/builtin_rules/
\cp etc/snort_defaults.lua etc/snort.lua /usr/local/snort/etc/snort/
echo '___________________________________________________________________'
echo '                                                                   '
echo 'Update OpenID'
echo '___________________________________________________________________'  
cd $HOME
cd sources
curl -Lo snort-openappid.tar.gz https://www.snort.org/downloads/openappid/16584
tar xf snort-openappid.tar.gz
mv odp/ /usr/local/snort/appid/
echo '___________________________________________________________________'
echo '                                                                   '
echo 'Update IP Reputation'
echo '___________________________________________________________________'  
cd $HOME
cd sources
curl -Lo ip-blocklist https://www.talosintelligence.com/documents/ip-blacklist
mv ip-blocklist /usr/local/snort/intel/
touch /usr/local/snort/intel/ip-passlist
echo '___________________________________________________________________'
echo '                                                                   '
echo 'Updating /usr/local/snort/etc/snort/snort.lua && snort_defaults.lua'
echo '___________________________________________________________________'  
cd $HOME
rm -f /usr/local/snort/etc/snort/snort.lua
\cp sources/config_snort3/snort.lua /usr/local/snort/etc/snort/
rm -f /usr/local/snort/etc/snort/snort_defaults.lua
\cp sources/config_snort3/snort_defaults.lua /usr/local/snort/etc/snort/
cd $HOME
cd sources
echo '___________________________________________________________________'
echo '                                                                   '
echo 'Updating PulledPork'
echo '___________________________________________________________________' 
mkdir -p /usr/local/pulledpork/etc
git clone https://github.com/shirkdog/pulledpork.git
\cp pulledpork/pulledpork.pl /usr/local/pulledpork/
\cp pulledpork/etc/* /usr/local/pulledpork/etc/
cd $HOME
rm -f /usr/local/pulledpork/etc/pulledpork.conf
\cp sources/config_snort3/pulledpork.conf /usr/local/pulledpork/etc/
echo [Unit] >> /etc/systemd/system/pulledpork.service
echo Description=PulledPork service for updating Snort 3 rules  >> /etc/systemd/system/pulledpork.service
echo 	Wants=pulledpork.timer  >> /etc/systemd/system/pulledpork.service
echo [Service]  >> /etc/systemd/system/pulledpork.service
echo Type=oneshot  >> /etc/systemd/system/pulledpork.service
echo 	ExecStart=perl /usr/local/pulledpork/pulledpork.pl -c /usr/local/pulledpork/etc/pulledpork.conf -PE -v -I security -T -H SIGHUP  >> /etc/systemd/system/pulledpork.service
echo [Install]  >> /etc/systemd/system/pulledpork.service
echo 	WantedBy=multi-user.target  >> /etc/systemd/system/pulledpork.service
echo [Unit] >> /etc/systemd/system/pulledpork.timer
echo 	Description=PulledPork service timer for updating Snort 3 rules >> /etc/systemd/system/pulledpork.timer
echo 	Requires=pulledpork.service >> /etc/systemd/system/pulledpork.timer
echo [Timer] >> /etc/systemd/system/pulledpork.timer
echo 	Unit=pulledpork.service >> /etc/systemd/system/pulledpork.timer
echo 	OnCalendar=*-*-* 00:10:00 >> /etc/systemd/system/pulledpork.timer
echo 	AccuracySec=1us >> /etc/systemd/system/pulledpork.timer
echo [Install] >> /etc/systemd/system/pulledpork.timer
echo 	WantedBy=timers.target >> /etc/systemd/system/pulledpork.timer
perl /usr/local/pulledpork/pulledpork.pl -c /usr/local/pulledpork/etc/pulledpork.conf -PE -v -I security -T -H
perl /usr/local/pulledpork/pulledpork.pl -c /usr/local/pulledpork/etc/pulledpork.conf -PE -v -I security -T -H SIGHUP
systemctl daemon-reload
systemctl enable pulledpork.timer
sleep 10s
#/usr/local/snort/bin/snort -c /usr/local/snort/etc/snort/snort.lua -i eno1-l /var/log/snort --plugin-path /usr/local/snort/extra -k none

echo '___________________________________________________________________'
echo '                                                                   '
echo 'Updating Snort User, Logging Directory and Systemd Startup Service '
echo '___________________________________________________________________' 
echo [Unit] >> /etc/systemd/system/snort.service
echo Description=Snort 3 Intrusion Detection and Prevention service  >> /etc/systemd/system/snort.service
echo After=syslog.target network.target  >> /etc/systemd/system/snort.service
echo [Service]  >> /etc/systemd/system/snort.service
echo Type=simple  >> /etc/systemd/system/snort.service
echo ExecStart=/usr/local/snort/bin/snort -c /usr/local/snort/etc/snort/snort.lua --plugin-path /usr/local/snort/extra -i eno1 -l /var/log/snort -D -u snort -g snort --create-pidfile --tweaks custom_tweaks -k none -z 4 --id-subdir >> /etc/systemd/system/snort.service
echo ExecReload=/bin/kill -SIGHUP $MAINPID  >> /etc/systemd/system/snort.service
echo User=snort  >> /etc/systemd/system/snort.service
echo Group=snort  >> /etc/systemd/system/snort.service
echo Restart=on-failure  >> /etc/systemd/system/snort.service
echo RestartSec=5s  >> /etc/systemd/system/snort.service
echo CapabilityBoundingSet=CAP_NET_ADMIN CAP_NET_RAW CAP_IPC_LOCK  >> /etc/systemd/system/snort.service
echo AmbientCapabilities=CAP_NET_ADMIN CAP_NET_RAW CAP_IPC_LOCK  >> /etc/systemd/system/snort.service
echo [Install]  >> /etc/systemd/system/snort.service
echo WantedBy=multi-user.target  >> /etc/systemd/system/snort.service
systemctl daemon-reload
systemctl enable snort.service
systemctl start snort.service 
systemctl status snort.service
echo '___________________________________________________________________'
echo '                                                                   '
echo 'Finished !														 '
echo 'Using command: 													 '
echo '      - systemctl start snort.service to start Snort				 '
echo '      - systemctl stop snort.service to stop Snort				 '
echo '      - systemctl status snort.service to view Snort status	     '
echo 'All log files will be store at /var/log/snort						 '
echo 'NOTED: 															 '
echo '     - Ethernet interface is "eno1" 								 '
echo '     - Ethernet should be change to Promiscuous Mode. 			 '
echo '		 Refer /etc/systemd/system/promisc.service 					 '
echo '___________________________________________________________________'
echo '                                                                   '
ls -la /var/log/snort
ps auxww | grep -i "snort"
